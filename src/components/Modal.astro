---
interface Props {
  toggleButtonClasses: string;
}

const { toggleButtonClasses } = Astro.props;
---

<basic-modal>
  <button class:list={[toggleButtonClasses, "dialog-toggle-button"]}>
    <slot name="toggle-button-icon" />
  </button>

  <dialog class="absolute bg-dark w-full h-full backdrop:margin-0 margin-0">
    <button class="text-white absolute w-50px right-2 z-3">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960"
        ><path
          fill="currentcolor"
          d="m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z"
        ></path></svg
      >
    </button>

    <div>
      <slot />
    </div>
  </dialog>
</basic-modal>

<script>
  class BasicModal extends HTMLElement {
    constructor() {
      super();

      const dialogElement = this.querySelector<HTMLDialogElement>("dialog");
      const openButton = this.querySelector<HTMLButtonElement>("button");
      const closeButton = dialogElement?.querySelector("button");

      if (!openButton || !closeButton || !dialogElement)
        throw new Error("Basic modal can't find their required DOM Elements");

      openButton.addEventListener("click", () => dialogElement.showModal());
      closeButton.addEventListener("click", () => dialogElement.close());
    }
  }

  customElements.define("basic-modal", BasicModal);
</script>
