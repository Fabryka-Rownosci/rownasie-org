---
import { Image } from "astro:assets";

import { useTranslation } from "@i18n/useTranslation";

import arrowDown from "@images/arrow.png";

import type { Language } from "@i18n/languages";

interface Props {
  language: Language;
}

const { language } = Astro.props;
const t = useTranslation(language);
---

<basic-slider>
  <div
    class="slider-grid auto-cols-100% relative grid grid-flow-col overflow-hidden"
  >
    <slot />
  </div>

  <div class="flex justify-center">
    <button class="slider-nav-prev">
      <Image
        src={arrowDown}
        alt={t("images_alt.slider_arrow_left")}
        width={30}
        height={30}
        class="rotate-90"
      />
    </button>
    <button class="slider-nav-next">
      <Image
        src={arrowDown}
        alt={t("images_alt.slider_arrow_right")}
        width={30}
        height={30}
        class="-rotate-90"
      />
    </button>
  </div>
</basic-slider>

<script>
  class BasicSlider extends HTMLElement {
    #activeItem?: HTMLElement | null;
    get activeItem() {
      return this.#activeItem;
    }

    set activeItem(val) {
      this.#activeItem = val;
      this.updateNavigationButtons();
    }

    navigationButtons: {
      previous: HTMLButtonElement;
      next: HTMLButtonElement;
    };

    constructor() {
      super();

      // NOTE: I promise that I know about this.querySelector<T>
      // but eslint astro plugin have problems with TS in script tags
      // and reports this.querySelector<T> as syntax error
      // https://github.com/ota-meshi/eslint-plugin-astro/issues/240
      const prevButton = this.querySelector(
        "button.slider-nav-prev",
      ) as HTMLButtonElement | null;

      const nextButton = this.querySelector(
        "button.slider-nav-next",
      ) as HTMLButtonElement | null;

      const elementsGrid = this.querySelector<HTMLElement>(".slider-grid");
      const firstContent = elementsGrid?.children?.[0] as HTMLElement | null;

      if (!prevButton || !nextButton || !elementsGrid || !firstContent)
        throw new Error("Basic slider can't find their required DOM Elements");

      this.navigationButtons = {
        previous: prevButton,
        next: nextButton,
      };

      this.activeItem = firstContent;

      this.navigationButtons.previous.addEventListener("click", () => {
        this.activeItem = this.activeItem
          ?.previousElementSibling as HTMLElement;
        this.scrollIntoActiveItem();
      });

      this.navigationButtons.next.addEventListener("click", () => {
        this.activeItem = this.activeItem?.nextElementSibling as HTMLElement;
        this.scrollIntoActiveItem();
      });
    }

    updateNavigationButtons() {
      this.navigationButtons.next.hidden = !this.activeItem?.nextElementSibling;
      this.navigationButtons.previous.hidden =
        !this.activeItem?.previousElementSibling;
    }

    scrollIntoActiveItem() {
      this.activeItem?.scrollIntoView({
        behavior: "smooth",
        block: "nearest",
        inline: "center",
      });
    }
  }

  customElements.define("basic-slider", BasicSlider);
</script>
