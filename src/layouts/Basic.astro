---
import Layout from "../layouts/Layout.astro";
import Section from "../layouts/Section.astro";
import LanguageSwitch from "../layouts/LanguageSwitch.astro";
import Logo from "../components/Logo.astro";
import arrowDown from "../images/move_down.png";
import fbIcon from "../images/fb.png";
import igIcon from "../images/ig.png";
import { Image } from "astro:assets";
import Tabs from "../components/Tabs.astro";
import { getCollection } from "astro:content";
import Slider from "../components/Slider.astro";
import PersonDescription from "../components/PersonDescription.astro";
import TabItem from "../components/TabItem.astro";
import Project from "../components/Project.astro";
import ProjectsGrid from "../components/ProjectsGrid.astro";
import splitIntoChunks from "../helpers/splitIntoChunks.mjs";
import Navigation from "../components/Navigation.astro";
import { useTranslation } from "../i18n/useTranslation";
import Modal from "../components/Modal.astro";
import HamburgerButton from "../components/HamburgerButton.astro";

import { Languages, type Language } from "../i18n/languages";

import "./index.css";
import toSlug from "../helpers/toSlug.mts";

interface Props {
  lang: Language;
}

const { lang } = Astro.props;
const t = useTranslation(lang);

const aboutUsCollection = await getCollection("about-us");
const { Content: AssociationContent } =
  (await aboutUsCollection
    .find(({ slug }) => slug === `${lang}/association`)
    ?.render()) ?? {};
if (!AssociationContent) throw new Error("Association content is missing");

const boardMembersCollection = await getCollection("board");
const boardsContent = await Promise.all(
  boardMembersCollection
    .filter(({ slug }) => slug.startsWith(lang))
    .map(async (entry) => {
      return {
        ...entry,
        Content: (await entry.render()).Content,
      };
    }),
);

const auditCommitteeCollection = await getCollection("audit-committee");
const auditCommitteeContent = await Promise.all(
  auditCommitteeCollection
    .filter(({ slug }) => slug.startsWith(lang))
    .map(async (entry) => {
      return {
        ...entry,
        Content: (await entry.render()).Content,
      };
    }),
);

const projectsCollection = await getCollection("projects");
const projectsContentChunks = splitIntoChunks(
  await Promise.all(
    projectsCollection
      .filter(({ slug }) => slug.startsWith(lang))
      .map(async (entry) => {
        return {
          ...entry,
          Content: (await entry.render()).Content,
        };
      }),
  ),
  4,
);

const documentsCollection = await getCollection("documents");
const documentsContentChunks = splitIntoChunks(
  await Promise.all(
    documentsCollection
      .filter(({ id }) => id.startsWith(lang))
      .map(async (entry) => {
        return {
          ...entry,
        };
      }),
  ),
  4,
);

const supportCollection = await getCollection("support");
const supportContent = await Promise.all(
  supportCollection
    .filter(({ slug }) => slug.startsWith(lang))
    .map(async (entry) => {
      return {
        ...entry,
        Content: (await entry.render()).Content,
      };
    }),
);

const associationInfoCollection = await getCollection("association-info");
const associationInfo = associationInfoCollection.find(
  ({ id }) => id === `${lang}/main`,
);

if (!associationInfo) throw new Error("Association info is missing");

const supportUsCollection = await getCollection("support-us");
const supportUsContent = supportUsCollection.find(
  ({ slug }) => slug === `${lang}/support-us`,
);

if (!supportUsContent) throw new Error("Support us content is missing");
const SupportUsContent = (await supportUsContent.render()).Content;
---

<Layout title={t("meta.title")}>
  <header class="w-full h-full min-h-xl md:min-h-5xl bg-primary grid">
    <div class="m-5">
      <div class="float-left">
        <LanguageSwitch language={lang} />
      </div>
    </div>

    <div
      class="pt-2 flex flex-col text-center justify-beetwen h-full items-center text-white"
    >
      <Logo language={lang} />
      <h1 class="font-bold mt-5">{t("header.motto")}</h1>
    </div>
  </header>

  <HamburgerButton classes="md:hidden">
    <Modal toggleButtonClasses="w-full">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 -960 960 960"
        slot="toggle-button-icon"
        ><path
          fill="currentcolor"
          d="M120-240v-80h720v80H120Zm0-200v-80h720v80H120Zm0-200v-80h720v80H120Z"
        ></path></svg
      >

      <Navigation
        id="mobile-menu"
        classes="absolute top-0 left-0 h-full w-full"
        language={lang}
      />
    </Modal>
  </HamburgerButton>

  <div class="relative">
    <svg viewBox="0 0 375 100" fill="none" xmlns="http://www.w3.org/2000/svg">
      <rect y="19" width="375" height="67" fill="url(#paint0_linear_1_2)"
      ></rect>
      <path
        d="M42.6016 35.6211C68.8516 40.4219 95.4766 44.3945 122.25 42.1445C148.125 39.9727 171.977 27.4492 198 26.5508C224.398 25.6484 250.875 30.2969 276.449 36.2227C319.422 46.1211 353.473 33.9727 374.996 21.4492V0H0.00390625V26.7734C14.0273 30.4492 28.5039 33.0742 42.6016 35.6211Z"
        fill="#776391"></path>
      <defs>
        <linearGradient
          id="paint0_linear_1_2"
          x1="187.5"
          y1="19"
          x2="187.5"
          y2="86"
          gradientUnits="userSpaceOnUse"
        >
          <stop stop-opacity="0.4"></stop>
          <stop offset="0.703125" stop-opacity="0.08"></stop>
          <stop offset="1" stop-opacity="0"></stop>
        </linearGradient>
      </defs>
    </svg>
    <Image
      class="absolute top-0 w-20% md:w-90px md:top-15 left-1/2 -translate-x-1/2"
      src={arrowDown}
      alt={t("images_alt.arrow_down")}
    />
  </div>

  <div class="hidden md:block">
    <Navigation
      classes="hidden top-0 fixed"
      id="desktop-menu"
      language={lang}
      autoHide
    />
  </div>
  <Section title={t("section_titles.about_us")}>
    <Tabs
      list={[
        {
          tab: t("categories.association"),
          id: "association",
        },
        {
          tab: t("categories.board"),
          id: "board",
        },
        {
          tab: t("categories.audit_committee"),
          id: "audit_committee",
        },
      ]}
    >
      <TabItem id="association">
        <AssociationContent />
      </TabItem>

      <TabItem id="board">
        <Slider language={lang}>
          {
            boardsContent.map((entry) => (
              <div id={entry.slug}>
                <PersonDescription
                  name={entry.data.name}
                  photo={entry.data.photo}
                  title={entry.data.title}
                  language={lang}
                >
                  <entry.Content />
                </PersonDescription>
              </div>
            ))
          }
        </Slider>
      </TabItem>

      <TabItem id="audit_committee">
        <Slider language={lang}>
          {
            auditCommitteeContent.map((entry) => (
              <div id={entry.slug}>
                <PersonDescription
                  name={entry.data.name}
                  photo={entry.data.photo}
                  title={entry.data.title}
                  language={lang}
                >
                  <entry.Content />
                </PersonDescription>
              </div>
            ))
          }
        </Slider>
      </TabItem>
    </Tabs>
  </Section>

  <Section title={t("section_titles.projects")}>
    <Slider language={lang}>
      {
        projectsContentChunks.map((chunk) => {
          return (
            <ProjectsGrid>
              {chunk.map((entry) => (
                <Project
                  href={`/${lang !== Languages.PL ? `${lang}/` : ""}${toSlug(
                    entry.data.name,
                  )}`}
                  language={lang}
                  name={entry.data.name}
                >
                  {entry.data.description}
                </Project>
              ))}
            </ProjectsGrid>
          );
        })
      }
    </Slider>
  </Section>

  <Section title={t("section_titles.support")}>
    <Tabs
      list={supportContent.map(({ data: { name }, slug }) => ({
        tab: name,
        id: slug,
      }))}
    >
      {
        supportContent.map((entry) => (
          <TabItem id={entry.slug}>
            <entry.Content />
          </TabItem>
        ))
      }
    </Tabs>
  </Section>

  <Section title={t("section_titles.contact")}>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-5 md:gap-0">
      <div class="col-span-1 md:col-span-1">
        <h3 class="font-bold">{t("contact.office")}:</h3>
        <p class="mt-3">
          <a href={associationInfo.data.addressLink}>
            {associationInfo.data.addressPartOne}
            <br />
            {associationInfo.data.addressPartTwo}
          </a>
        </p>
      </div>
      <div class="col-span-1 md:col-span-2">
        <p class="mb-3">
          <span>
            <span class="font-bold mr-1">{t("contact.questions")}:</span>
            <a href=`mailto:${associationInfo.data.emailQuestions}`>
              {associationInfo.data.emailQuestions}
            </a>
          </span>
        </p>
        <p class="col-span-1 md:col-span-2 mb-3">
          <span class="font-bold mr-1">{t("contact.support")}:</span>
          <a href=`mailto:${associationInfo.data.emailHelp}`>
            {associationInfo.data.emailHelp}
          </a>
        </p>
        <p class="mb-3">
          <span class="font-bold mr-1">{t("contact.rodo")}:</span>
          <a href=`mailto:${associationInfo.data.emailRodo}`
            >{associationInfo.data.emailRodo}
          </a>
        </p>
        <p class="mb-3">
          <span class="font-bold mr-1">{t("contact.phone")}:</span>
          {associationInfo.data.tel}
        </p>
      </div>
      <div class="hidden md:block col-span-3 grid-row-start-2">
        <iframe
          src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2468.815611051249!2d19.45457077643611!3d51.77297797187484!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x471bcba2e0685ba3%3A0xcabf7d1d9e9428cf!2sStowarzyszenie%20Fabryka%20R%C3%B3wno%C5%9Bci!5e0!3m2!1sen!2ses!4v1691925154740!5m2!1sen!2ses"
          width="100%"
          height="800px"
          allowfullscreen=""
          loading="lazy"
          referrerpolicy="no-referrer-when-downgrade"></iframe>
      </div>
    </div>
  </Section>

  <Section title={t("section_titles.support_us")}>
    <SupportUsContent />
    <a href={supportUsContent.data.donateLink} target="_blank">
      <button class="btn btn-primary block m-auto"
        >{t("support_us.button")}</button
      >
    </a>
  </Section>

  <Section title={t("section_titles.documents")}>
    <Slider language={lang}>
      {
        documentsContentChunks.map((chunk) => {
          return (
            <ProjectsGrid>
              {chunk.map((entry) => (
                <Project
                  href={`/documents/${entry.data.filename}`}
                  language={lang}
                  name={entry.data.name}
                >
                  {entry.data.description}
                </Project>
              ))}
            </ProjectsGrid>
          );
        })
      }
    </Slider>
  </Section>

  <footer class="clear-both w-full">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 375 34.5">
      <path
        style=" stroke:none;fill-rule:nonzero;fill:rgb(46.669006%,38.819885%,56.858826%);fill-opacity:1;"
        d="M 332.3984 7.0711 C 306.1484 2.2742 279.5234 -1.6984 252.75 0.5516 C 226.875 2.7234 203.0234 15.2469 177 16.1453 C 150.6016 17.0438 124.125 12.3953 98.5508 6.4734 C 55.5781 -3.425 21.5273 8.7234 0.0039 21.243 L 0.0039 34.7 L 374.9961 34.7 L 374.9961 15.9188 C 360.9727 12.2469 346.4961 9.6219 332.3984 7.0711 Z M 332.3984 7.0711"
      ></path>
    </svg>
    <div class="bg-primary px-2 lg:px-20">
      <div class="flex justify-between flex-col md:flex-row">
        <div>
          <div class="my-6 md:mt-0">
            <p class="text-lg font-bold">{t("footer.association")}</p>
            <p>
              {associationInfo.data.addressPartOne}
              <br />
              {associationInfo.data.addressPartTwo}
            </p>
          </div>
          <div>
            <p>NIP: {associationInfo.data.nip}</p>
            <p>KRS: {associationInfo.data.krs}</p>
          </div>
        </div>
        <div>
          <div class="my-6 md:mt-0">
            <p class="font-bold">{t("footer.bank_acc")}:</p>
            <p set:html={associationInfo.data.bankAccount} />
          </div>
        </div>
      </div>
      <div class="py-5 md:pt-20 border-b border-b-black">
        <a href={associationInfo.data.fbLink} rel="noopener" target="_blank">
          <Image
            class="mr-5 inline"
            src={fbIcon}
            width="50"
            height="50"
            alt={t("images_alt.facebook_icon")}
          />
        </a>

        <a href={associationInfo.data.igLink} rel="noopener" target="_blank">
          <Image
            class="inline"
            src={igIcon}
            width="50"
            height="50"
            alt={t("images_alt.instagram_icon")}
          />
        </a>
      </div>
      <div class="flex flex-col md:flex-row justify-between">
        <div>
          <p class="font-bold underline">
            <a href="#">{t("footer.statue")}</a>
          </p>
          <p class="font-bold underline">
            <a href="#">{t("footer.privacy_police")}</a>
          </p>
        </div>
        <p>© {new Date().getFullYear()}{" "}{t("footer.association")}</p>
      </div>
    </div>
  </footer>
</Layout>
