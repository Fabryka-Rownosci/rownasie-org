---
import Section from "@layouts/Section.astro";

import Tabs from "@components/Tabs.astro";
import TabItem from "@components/TabItem.astro";
import PersonDescription from "@components/PersonDescription.astro";
import Slider from "@components/Slider/Slider.astro";

import getCollectionEntries from "@helpers/collections/getCollectionEntries";
import { useTranslation } from "@i18n/useTranslation";

import type { Language } from "@i18n/languages";

interface Props {
  language: Language;
}

const { language } = Astro.props;
const t = useTranslation(language);

const associationEntry = (
  await getCollectionEntries("about-us", language, ({ slug }) =>
    slug.includes("association"),
  )
)[0];

const boardsEntries = await getCollectionEntries(
  "about-us",
  language,
  ({ slug }) => slug.includes("board/"),
);

const auditCommitteesEntries = await getCollectionEntries(
  "about-us",
  language,
  ({ slug }) => slug.includes("audit-committee/"),
);
---

<Section title={t("section_titles.about_us")}>
  <Tabs
    list={[
      {
        tab: t("categories.association"),
        id: "association",
      },
      {
        tab: t("categories.board"),
        id: "board",
      },
      {
        tab: t("categories.audit_committee"),
        id: "audit_committee",
      },
    ]}
  >
    <TabItem id="association">
      <associationEntry.Content />
    </TabItem>

    <TabItem id="board">
      <Slider language={language}>
        {
          boardsEntries.map(
            (entry) =>
              entry.data.person && (
                <div id={entry.slug}>
                  <PersonDescription
                    name={entry.data.person.name}
                    photo={entry.data.person.photo}
                    title={entry.data.person.title}
                    language={language}
                  >
                    <entry.Content />
                  </PersonDescription>
                </div>
              ),
          )
        }
      </Slider>
    </TabItem>

    <TabItem id="audit_committee">
      <Slider language={language}>
        {
          auditCommitteesEntries.map(
            (entry) =>
              entry.data.person && (
                <div id={entry.slug}>
                  <PersonDescription
                    name={entry.data.person.name}
                    photo={entry.data.person.photo}
                    title={entry.data.person.title}
                    language={language}
                  >
                    <entry.Content />
                  </PersonDescription>
                </div>
              ),
          )
        }
      </Slider>
    </TabItem>
  </Tabs>
</Section>
