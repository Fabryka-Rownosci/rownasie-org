---
import { getCollection } from "astro:content";

import Section from "@layouts/Section.astro";

import Project from "@components/Project.astro";
import ProjectsGrid from "@components/ProjectsGrid.astro";
import Slider from "@components/Slider.astro";

import splitIntoChunks from "@helpers/splitIntoChunks";
import toSlug from "@helpers/toSlug";

import { useTranslation } from "@i18n/useTranslation";
import { Languages } from "@i18n/languages";

import type { Language } from "@i18n/languages";

interface Props {
  language: Language;
}

const { language } = Astro.props;
const t = useTranslation(language);

const projectsCollection = await getCollection("projects");
const projectsContentChunks = splitIntoChunks(
  await Promise.all(
    projectsCollection
      .filter(({ slug }) => slug.startsWith(language))
      .map(async (entry) => ({
        ...entry,
        Content: (await entry.render()).Content,
      })),
  ),
  4,
);
---

<Section title={t("section_titles.projects")}>
  <Slider language={language}>
    {
      projectsContentChunks.map((chunk) => (
        <ProjectsGrid>
          {chunk.map((entry) => (
            <Project
              href={`/${
                language !== Languages.PL ? `${language}/` : ""
              }${toSlug(entry.data.name)}`}
              language={language}
              name={entry.data.name}
            >
              {entry.data.description}
            </Project>
          ))}
        </ProjectsGrid>
      ))
    }
  </Slider>
</Section>
 @helpers/splitIntoChunks
